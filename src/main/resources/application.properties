spring.profiles.active=dev

# ------------------------------------------------------------- #
### Konfiguracja zarz¹dzania aplikacj¹ (Spring Boot Actuator) ###
# ------------------------------------------------------------- #

# Ustawienie portu (domyœlny taki jak aplikacja)
management.server.port=9001

# Ustawienie œcie¿ki dostêpu (domyœlna jest /actuator)
# Œcie¿ka powinna umo¿liwiaæ nam bardzo precyzyjne jej zabezpieczenie
management.endpoints.web.base-path=/manage

# Wybór enpointów do w³¹czenia.
# Pe³na lista tutaj: https://docs.spring.io/spring-boot/docs/current/reference/html/production-ready-endpoints.html
#
# Ka¿dy endpoint ma potem œcie¿ki jak:
#
# /manage/env
# /manage/loggers
#
management.endpoints.web.exposure.include=env, health, httptrace, info, loggers, metrics, mappings, shutdown

# W³¹czamy mo¿liwoœæ zdalnego wy³¹czenia aplikacji (ten jeden endpoint domyœlnie jest wy³¹czony)
management.endpoint.shutdown.enabled=true

# Konfigurujemy endpoint info z danymi o aplikacji
info.app.name=Spring Pagination & Projection
info.app.version=1.0
# W ten sposób oznaczamy w³aœciwoœci z maven'a (pliku pom)
info.java.version=@java.version@
info.group.id=@groupId@
info.artifact.id=@artifactId@


# ------------------------------ #
### Konfiguracja zapisu plików ###
# ------------------------------ #

# W³¹czamy jawnie obs³ugê ¿¹dañ typu multipart https://stackoverflow.com/questions/16958448/what-is-http-multipart-request
spring.servlet.multipart.enabled=true

# Wskazujemy katalog do tymczasowego zapisu plików (tutaj korzystamy z domyœlnego katalogu tmp dla Javy)
spring.servlet.multipart.location=${java.io.tmpdir}/upload

# Okreœlamy maksymany rozmiar ¿¹dania (czyli plik + dane albo np. kilka plików)
spring.servlet.multipart.max-request-size=10MB

# Okreœlamy maksymalny rozmiar pojedynczego pliku
spring.servlet.multipart.max-file-size=2MB